services:
  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    restart: always
    networks:
      - ${NETWORK}
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${INSTALLDIR}/data/traefik.yml:/traefik.yml:ro
      - ${INSTALLDIR}/data/configs:/configs:ro
      - ${INSTALLDIR}/data/acme.json:/acme.json:rw
      - ${INSTALLDIR}/data/logs:/logs:rw
    environment:
      - CF_DNS_API_TOKEN=${CFAPI}
    read_only: true
    security_opt:
      - no-new-privileges=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.rule=Host(`${HOSTNAME}.${DOMAIN}`)
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIKADMIN}
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN}
      - traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN}

    healthcheck:
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

  certdumper:
    image: humenius/traefik-certs-dumper:latest
    container_name: cert-dumper
    restart: unless-stopped
    volumes:
      -  /etc/localtime:/etc/localtime:ro
      -  ${INSTALLDIR}/data:/traefik:ro
      -  ${CERTDIR}:/output:rw
      -  /var/run/docker.sock:/var/run/docker.sock:ro

    environment:
      PRIVATE_KEY_FILE_NAME: private
      PRIVATE_KEY_FILE_EXT: .key
      CERTIFICATE_FILE_NAME: certificate
      CERTIFICATE_FILE_EXT: .pem
      COMBINED_PEM: fullchain.pem
      PKCS12_PASSWORD: ${PKCS12_PASS}
      COMBINE_PKCS12: "yes"
      CONVERT_KEYS_TO_RSA: "yes"
      RSA_KEY_FILE_NAME: "private_rsa"
      RSA_KEY_FILE_EXT: ".key"

    healthcheck:
      test: ["CMD", "/usr/bin/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  ${NETWORK}:
    external: true
